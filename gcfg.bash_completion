# gcfg completion

[ -z "$(type gcfg 2>/dev/null)" ] && return
_gcfg()
{
  local cur

  COMPREPLY=()
  cur=`_get_cword`

  _expand || return 0

  if [ $COMP_CWORD -eq 1 ]; then
    COMPREPLY=( $( compgen -W 'init \
                               verify \
                               list \
                               add new \
                               copy \
                               move \
                               remove \
                               edit  \
                               permissions \
                               flag \
                               unflag \
                               flagged \
                               original \
                               delta \
                               pkglist \
                               pkgsave \
                               pkgdiff \
                               git \
                               a2ps' -- "$cur" ) )
  elif [ $COMP_CWORD -eq 2 ]; then
    local prev=${COMP_WORDS[COMP_CWORD-1]}
    case "$prev" in
      @(list))
        COMPREPLY=( $( compgen -W '@ANSIBLE @EDITED @FLAGS' -- "$cur" ) )
      ;;
      @(verify|add|new|copy|cp|move|mv|remove|rm|edit|permissions|perm|chmod|chown|flag|unflag|flagged|original|orig|delta|a2ps))
        _filedir
      ;;
      @(git))
        COMPREPLY=( $( compgen -W 'add checkout commit diff log push reset status' -- "$cur" ) )
      ;;
    esac
  elif [ $COMP_CWORD -eq 3 ]; then
    local prev=${COMP_WORDS[COMP_CWORD-2]}
    case "$prev" in
      @(copy|cp|move|mv|git))
        _filedir
      ;;
    esac
  fi
  return 0
} &&
complete -F _gcfg $filenames gcfg
