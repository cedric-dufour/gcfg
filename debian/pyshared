#!/bin/bash
set -e

## Usage
[ $# -lt 2 ] && cat << EOF && exit 1
USAGE: ${0##*/} <root-directory> <python2-version> [<python2-version> ...]

SYSNOPSIS:
  Move and symlink /usr/lib/python2.x/dist-packages/* content
  to /usr/share/pyshared/. like dh_pysupport used to do before
  Python 2.6 got deprecated.
EOF


## Arguments
MY_ROOT="${1%%/}"; shift
# ... validation
pushd "${MY_ROOT}" >/dev/null
MY_ROOT="$(pwd)"
popd >/dev/null


## Variables
MY_DIR_PYDIST_PREFIX="${MY_ROOT}/usr/lib/python2."
MY_DIR_PYSHARED="${MY_ROOT}/usr/share/pyshared"


## Check
[ -e "${MY_DIR_PYSHARED}" ] && echo "ERROR: PyShared directory already exists (${MY_DIR_PYSHARED})" >&2 && exit 1


## Symlinks

# Look for highest version PyDist directory
MY_DIR_PYDIST="$(ls -1d "${MY_DIR_PYDIST_PREFIX}"*/dist-packages | sort -rV | head -n 1)"
[ -z "${MY_DIR_PYDIST}" ] && echo "ERROR: Failed to retrieve PyDist directory (${MY_DIR_PYDIST_PREFIX}*/dist-packages)" >&2 && exit 1

# Create PyShared directory
mkdir -p "${MY_DIR_PYSHARED}"

# Move PyDist directory content to PyShared directory
mv -v "${MY_DIR_PYDIST}"/* "${MY_DIR_PYSHARED}"/.

# Remove PyDist directories
rm -rf "${MY_DIR_PYDIST_PREFIX}"*

# Symlink PyShared directory content back to PyDist directories
pushd "${MY_DIR_PYSHARED}" >/dev/null
while [ -n "${1}" ]; do
  version="${1}"; shift
  [ "${version:0:2}" != '2.' ] && echo "ERROR: Invalid version (${version})" && continue
  pydist="${MY_DIR_PYDIST_PREFIX}${version#2.}/dist-packages"
  for content in $(find . -type f); do
    content="${content#./}"
    content_dir="$(dirname "${content}")"
    [ ! -e "${pydist}/${content_dir}" ] && mkdir -p "${pydist}/${content_dir}"
    ln -sv "${MY_DIR_PYSHARED#${MY_ROOT}}/${content}" "${pydist}/${content_dir}"
  done
done
popd >/dev/null

